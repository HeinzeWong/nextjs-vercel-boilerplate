/* SCSS Mixins and Utilities */

// 导入Sass模块
@use "sass:map";

// =============================================================================
// 响应式断点 Mixins
// =============================================================================

$breakpoints: (
  xs: 0,
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  2xl: 1536px
);

@mixin media($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $value: map.get($breakpoints, $breakpoint);
    @if $value == 0 {
      @content;
    } @else {
      @media screen and (min-width: $value) {
        @content;
      }
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}";
  }
}

@mixin media-max($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $value: map.get($breakpoints, $breakpoint);
    @media screen and (max-width: calc(#{$value} - 1px)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}";
  }
}

@mixin media-between($min, $max) {
  @if map.has-key($breakpoints, $min) and map.has-key($breakpoints, $max) {
    $min-value: map.get($breakpoints, $min);
    $max-value: map.get($breakpoints, $max);
    @media screen and (min-width: $min-value) and (max-width: calc(#{$max-value} - 1px)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoints: #{$min}, #{$max}";
  }
}

// =============================================================================
// Flexbox Mixins
// =============================================================================

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// =============================================================================
// 位置和大小 Mixins
// =============================================================================

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size);
}

@mixin circle($size) {
  @include size($size);
  border-radius: 50%;
}

// =============================================================================
// 文本和字体 Mixins
// =============================================================================

@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// =============================================================================
// 阴影 Mixins
// =============================================================================

@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  } @else if $level == 2 {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  } @else if $level == 3 {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  } @else if $level == 4 {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  } @else if $level == 5 {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }
}

@mixin inner-shadow {
  box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);
}

// =============================================================================
// 过渡和动画 Mixins
// =============================================================================

@mixin transition($properties: all, $duration: 0.3s, $timing: ease) {
  transition: $properties $duration $timing;
}

@mixin transition-all($duration: 0.3s) {
  transition: all $duration ease;
}

@mixin hover-lift {
  transition: transform 0.2s ease;
  
  &:hover {
    transform: translateY(-2px);
  }
}

@mixin fade-in {
  opacity: 0;
  animation: fadeIn 0.3s ease forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@mixin slide-up {
  transform: translateY(20px);
  opacity: 0;
  animation: slideUp 0.3s ease forwards;
}

@keyframes slideUp {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// =============================================================================
// 按钮 Mixins
// =============================================================================

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-2) var(--spacing-4);
  border: none;
  border-radius: var(--border-radius-md);
  font-weight: 500;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: var(--color-blue-600);
  color: white;
  
  &:hover:not(:disabled) {
    background-color: var(--color-blue-700);
  }
  
  &:focus-visible {
    outline: 2px solid var(--color-blue-600);
    outline-offset: 2px;
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: var(--color-gray-700);
  border: 1px solid var(--color-gray-300);
  
  &:hover:not(:disabled) {
    background-color: var(--color-gray-50);
  }
  
  &:focus-visible {
    outline: 2px solid var(--color-gray-600);
    outline-offset: 2px;
  }
}

// =============================================================================
// 输入框 Mixins
// =============================================================================

@mixin input-base {
  padding: var(--spacing-2) var(--spacing-3);
  border: 1px solid var(--color-gray-300);
  border-radius: var(--border-radius-md);
  background-color: white;
  font-size: 1rem;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  
  &:focus {
    border-color: var(--color-blue-600);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    outline: none;
  }
  
  &:disabled {
    background-color: var(--color-gray-100);
    color: var(--color-gray-500);
    cursor: not-allowed;
  }
  
  &::placeholder {
    color: var(--color-gray-400);
  }
}

// =============================================================================
// 卡片 Mixins
// =============================================================================

@mixin card {
  background-color: white;
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-6);
  @include shadow(1);
}

@mixin card-hover {
  @include card;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  
  &:hover {
    transform: translateY(-2px);
    @include shadow(2);
  }
}

// =============================================================================
// 可视化隐藏 Mixins
// =============================================================================

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin visually-hidden-focusable {
  @include visually-hidden;
  
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

// =============================================================================
// 清除浮动 Mixins
// =============================================================================

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// =============================================================================
// Aspect Ratio Mixins
// =============================================================================

@mixin aspect-ratio($width, $height) {
  aspect-ratio: #{$width} / #{$height};
}

@mixin aspect-square {
  aspect-ratio: 1;
}

@mixin aspect-video {
  aspect-ratio: 16 / 9;
}

// =============================================================================
// 网格 Mixins
// =============================================================================

@mixin grid($columns: 12, $gap: var(--spacing-4)) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-responsive {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--spacing-4);
  
  @include media(sm) {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include media(md) {
    grid-template-columns: repeat(3, 1fr);
  }
  
  @include media(lg) {
    grid-template-columns: repeat(4, 1fr);
  }
}

// =============================================================================
// 工具函数
// =============================================================================

@function rem($px) {
  @return #{$px / 16}rem;
}

@function em($px, $base: 16) {
  @return #{$px / $base}em;
} 